<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"

  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

  xmlns:p="http://www.springframework.org/schema/p"

  xmlns:context="http://www.springframework.org/schema/context"

  xmlns:aop="http://www.springframework.org/schema/aop"

  xmlns:tx="http://www.springframework.org/schema/tx"

  xmlns:util="http://www.springframework.org/schema/util"

  xsi:schemaLocation="http://www.springframework.org/schema/beans

    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd

    http://www.springframework.org/schema/context

    http://www.springframework.org/schema/context/spring-context-3.2.xsd

    http://www.springframework.org/schema/tx

    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd

    http://www.springframework.org/schema/aop

    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd

    http://www.springframework.org/schema/util

    http://www.springframework.org/schema/util/spring-util-3.2.xsd">
    
    
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" /><!-- ${mysql.driver} -->
		<!-- ${mysql.url.account.master} ${mysql.username.account.master} ${mysql.password.account.master}-->
		
		<!-- <property name="url" value="jdbc:mysql://10.143.0.51:3306/sp_account?useUnicode=true&amp;autoReconnect=true&amp;characterEncoding=UTF-8" />
		<property name="username" value="zhonghuapay" />
		<property name="password" value="xinzhongxin324_WAR_!(UUI)_sit" /> -->
			
		<property name="url" value="${jdbc_url}" />
		<property name="username" value="${jdbc_username}" />
		<property name="password" value="${jdbc_password}" />
		
		
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="10"></property><!-- ${mysql.initialSize} -->
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="50"></property><!-- ${mysql.maxActive} -->
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="50"></property><!-- ${mysql.maxIdle} -->
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="1"></property><!-- ${mysql.minIdle} -->
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000"></property><!-- ${mysql.maxWait} -->
		<!-- 连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除 -->
		<property name="testWhileIdle" value="true" /><!-- ${mysql.testWhileIdle} -->
		<!-- SQL查询,用来验证从连接池取出的连接 -->
		<property name="validationQuery" value="select 1" /><!-- ${mysql.validationQuery} -->
		<!-- 空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" /><!-- ${mysql.timeBetweenEvictionRunsMillis} -->
		<!-- 在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->
		<property name="numTestsPerEvictionRun" value="100" /><!-- ${mysql.numTestsPerEvictionRun} -->
	</bean>   
   

    <!-- mybatis文件配置，扫描所有mapper文件 -->

      <bean id="sqlSessionFactory"

          class="org.mybatis.spring.SqlSessionFactoryBean"

          p:dataSource-ref="dataSource"

          p:configLocation="classpath:conf/mybatis-config.xml"

          p:mapperLocations="classpath:mapper/*.xml"/>
    <!-- configLocation为mybatis属性 mapperLocations为所有mapper-->

    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<!-- <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations">
			<list>
				<value>classpath*:mapper/*.xml</value>
			</list>
		</property>
		<property name="plugins">
			<list>
				<ref bean="pagePlugin" />
			</list>
		</property>
	</bean>    -->

   <!-- spring与mybatis整合配置，扫描所有dao -->
	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean id="mapperScannerConfigurer_acct" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.springmvc.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />

    </bean>

   <!-- 对数据源进行事务管理 -->
   
   <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />

  <!-- <bean id="transactionManager"

        class="org.springframework.jdbc.datasource.DataSourceTransactionManager"

        p:dataSource-ref="dataSource"/> -->

</beans>